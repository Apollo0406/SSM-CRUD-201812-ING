<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dao.StudentMapper" >
  <resultMap id="BaseResultMap" type="com.bean.Student" >
    <id column="stu_id" property="stuId" jdbcType="INTEGER" />
    <result column="stu_name" property="stuName" jdbcType="VARCHAR" />
    <result column="stu_sex" property="stuSex" jdbcType="VARCHAR" />
    <result column="stu_coun_id" property="stuCounId" jdbcType="INTEGER" />
    <result column="stu_uni_id" property="stuUniId" jdbcType="INTEGER" />
    <result column="stu_major_id" property="stuMajorId" jdbcType="INTEGER" />
  </resultMap>
  <!--定义新的resultMap -->
  <resultMap id="WithCountryResultMap" type="com.bean.Student">
    <id column="stu_id" property="stuId" jdbcType="INTEGER" />
    <result column="stu_name" property="stuName" jdbcType="VARCHAR" />
    <result column="stu_sex" property="stuSex" jdbcType="VARCHAR" />
    <result column="stu_coun_id" property="stuCounId" jdbcType="INTEGER" />
    <result column="stu_uni_id" property="stuUniId" jdbcType="INTEGER" />
    <result column="stu_major_id" property="stuMajorId" jdbcType="INTEGER" />
    <!-- 把Country关联进来-->
    <association property="country" javaType="com.bean.Country">
      <id column="country_id" property="country_id"/>
      <result column="country_name" property="country_name"/>
    </association>
  </resultMap>
  <!--定义新的结束 -->
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    stu_id, stu_name, stu_sex, stu_coun_id, stu_uni_id, stu_major_id
  </sql>
  <!-- 新增一个联合的列组合-->
  <sql id="WithCountry_Column_List">
  stu_id, stu_name, stu_sex, stu_coun_id, stu_uni_id, stu_major_id,country_name
  </sql>
  <!--自己新增一个联合查询 方便我们直接查出有外键的表中的其他信息 -->
  <select id="selectByExampleWithCountry" resultMap="WithCountryResultMap" >
    select
      <if test="distinct">
        distinct
      </if>
    <include refid="WithCountry_Column_List"/>
    FROM stu_info s
    left join country_info c
    on s.stu_coun_id=c.country_id
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
<!--带有国别信息的联合查询结束 -->

  <!--按照主键来查询国别信息 -->
  <select id="selectByPrimaryWithCountry" resultMap="WithCountryResultMap">
    select
    <include refid="WithCountry_Column_List" />
    FROM stu_info s
    left join country_info c
    on s.stu_coun_id=c.country_id
    WHERE stu_id=#{stuId,jdbcType=INTEGER}
  </select>
  <!--主键联合国别查询结束 -->
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.bean.StudentExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from stu_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from stu_info
    where stu_id = #{stuId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from stu_info
    where stu_id = #{stuId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.bean.StudentExample" >
    delete from stu_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.bean.Student" >
    insert into stu_info (stu_id, stu_name, stu_sex, 
      stu_coun_id, stu_uni_id, stu_major_id
      )
    values (#{stuId,jdbcType=INTEGER}, #{stuName,jdbcType=VARCHAR}, #{stuSex,jdbcType=VARCHAR}, 
      #{stuCounId,jdbcType=INTEGER}, #{stuUniId,jdbcType=INTEGER}, #{stuMajorId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.bean.Student" >
    insert into stu_info
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        stu_id,
      </if>
      <if test="stuName != null" >
        stu_name,
      </if>
      <if test="stuSex != null" >
        stu_sex,
      </if>
      <if test="stuCounId != null" >
        stu_coun_id,
      </if>
      <if test="stuUniId != null" >
        stu_uni_id,
      </if>
      <if test="stuMajorId != null" >
        stu_major_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="stuId != null" >
        #{stuId,jdbcType=INTEGER},
      </if>
      <if test="stuName != null" >
        #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null" >
        #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuCounId != null" >
        #{stuCounId,jdbcType=INTEGER},
      </if>
      <if test="stuUniId != null" >
        #{stuUniId,jdbcType=INTEGER},
      </if>
      <if test="stuMajorId != null" >
        #{stuMajorId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.bean.StudentExample" resultType="java.lang.Integer" >
    select count(*) from stu_info
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update stu_info
    <set >
      <if test="record.stuId != null" >
        stu_id = #{record.stuId,jdbcType=INTEGER},
      </if>
      <if test="record.stuName != null" >
        stu_name = #{record.stuName,jdbcType=VARCHAR},
      </if>
      <if test="record.stuSex != null" >
        stu_sex = #{record.stuSex,jdbcType=VARCHAR},
      </if>
      <if test="record.stuCounId != null" >
        stu_coun_id = #{record.stuCounId,jdbcType=INTEGER},
      </if>
      <if test="record.stuUniId != null" >
        stu_uni_id = #{record.stuUniId,jdbcType=INTEGER},
      </if>
      <if test="record.stuMajorId != null" >
        stu_major_id = #{record.stuMajorId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update stu_info
    set stu_id = #{record.stuId,jdbcType=INTEGER},
      stu_name = #{record.stuName,jdbcType=VARCHAR},
      stu_sex = #{record.stuSex,jdbcType=VARCHAR},
      stu_coun_id = #{record.stuCounId,jdbcType=INTEGER},
      stu_uni_id = #{record.stuUniId,jdbcType=INTEGER},
      stu_major_id = #{record.stuMajorId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.bean.Student" >
    update stu_info
    <set >
      <if test="stuName != null" >
        stu_name = #{stuName,jdbcType=VARCHAR},
      </if>
      <if test="stuSex != null" >
        stu_sex = #{stuSex,jdbcType=VARCHAR},
      </if>
      <if test="stuCounId != null" >
        stu_coun_id = #{stuCounId,jdbcType=INTEGER},
      </if>
      <if test="stuUniId != null" >
        stu_uni_id = #{stuUniId,jdbcType=INTEGER},
      </if>
      <if test="stuMajorId != null" >
        stu_major_id = #{stuMajorId,jdbcType=INTEGER},
      </if>
    </set>
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.bean.Student" >
    update stu_info
    set stu_name = #{stuName,jdbcType=VARCHAR},
      stu_sex = #{stuSex,jdbcType=VARCHAR},
      stu_coun_id = #{stuCounId,jdbcType=INTEGER},
      stu_uni_id = #{stuUniId,jdbcType=INTEGER},
      stu_major_id = #{stuMajorId,jdbcType=INTEGER}
    where stu_id = #{stuId,jdbcType=INTEGER}
  </update>
</mapper>